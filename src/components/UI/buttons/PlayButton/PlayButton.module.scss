@import 'data';

.PlayButton {
  height: $size-xs;
  width: $size-xs;
  //min-width: $size-xs;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-shrink: 0;
  color: var(--primary-color);
  transition: color .5s;
  button {
    width: calc(100% - #{$stroke-width-xs + 1}px);
    height: calc(100% - #{$stroke-width-xs + 1}px);
    color: currentColor;
    @include for-lg{
      width: calc(100% - #{$stroke-width-lg + 1}px);
      height: calc(100% - #{$stroke-width-lg + 1}px);
    }

    svg{
      width:0.60em;
      height:0.60em;
    }
  }
  &:local(.error){
    button svg{
      transition: color, fill .5s;
      color: var(--error-color);
    }
    :local(.circular) {
      transition: color .5s;
      color: var(--error-color);
      &:global(.MuiCircularProgress-indeterminate) {
        color: var(--text-color);
      }
    }
  }
  :local(.circular) {
    position: absolute;
    color: currentColor;
    width: 100% !important;
    height: 100% !important;
    left: 0;
    top: 0;
    transition: color .4s;
    transition-delay: .8s;
    svg {
      circle {
        stroke-width: $stroke-width-xs;
      }
    }
  }

  &:local(.type2) {
    button {
      background-color: var(--acсent-color);
      color: var(--primary-color);
    }
    :local(.circular) {
      color: var(--acсent-color);
      &:global(.MuiCircularProgress-indeterminate) {
        color: var(--third-color);
      }
    }

    &:local(.disable) {
      button {
        color: var(--border-color);
      }
    }

    &:local(.error){
      button {
        background-color: var(--error-color);
        color: var(--text-color);
      }
    }
  }
}
